PAGE 1
import pymysql
conn=pymysql.connect(

    host='localhost',
    user='root',
    password='root',
    db='crimedb',
)

print('Checking the connection')
print(conn)
cur=conn.cursor()
str1='Select * from crimedb.crime_data limit 2'
cur.execute(str1)
res=cur.fetchall()
for i in res:
    print(i)




PAGE 2
import pandas as pd
import numpy as np
import seaborn as sns
import plotly.express as px
import matplotlib.pyplot as plt

df=pd.read_csv(r'E:\Odin School\Python\Mini Capstone project\crime_data\crime_data.csv')

print('Information of given database')
print(df.info())
print('\n')

# Retrieve basic statistics on the dataset, such as the total number of records
print('Total number of record in given database')
print(df.shape)  # for records
print('\n')

# Unique values in specific columns.
df1=pd.DataFrame(df)
unique_values=df1["Crm_Cd"].unique()
print("Unique values from crime code column")
print(unique_values)
print('\n')


unique_values_of_Desc=df1["Crm_Cd_Desc"].unique()
print("Unique Values From Crime Code Description Columns:-")
print(unique_values_of_Desc)
print("\n")

#Identity the distinct crime codes and their descriptions.
print("distinct crime codes and their descriptions.")
df2=pd.DataFrame(data=unique_values_of_Desc, index=unique_values,columns=["Description"])
print(df2)


PAGE 3

#Determine trends in crime occurrence over time 
#Convert date columns to datetime objects
df['Date_Rptd']=pd.to_datetime (df['Date_Rptd'])
df['Date_Rptd']=pd.to_datetime (df ['DATE_OCC'])

#Aggregate by match 
monthly_crime=df.resample('M', on='Date_Rptd').size()

#plot the trend
plt.figure(figsize=(10,6))
plt.plot(montly_crime.index,monthly_crime.values, marker='H',color='#54B435')
plt.title("Crime Occurrence Over Time")
plt.xlabel("Month")

PAGE 4
#Utilize the geographical information (Latitude an Longitude) to perform spatial analysis
#using matplotlib 
plt.figure(figsize=(10,8))
plt.scatter(df['LON'],df['LAT'],s=15,alpha=0.5,c='blue')
plt.xlabel("Longitude")
plt.ylabel("Latitude")
plt.title("Crime Occurence")
plt.grid(True)
plt.show()
#Using Plotly.express create a scatter plot
fig=px.scatter(df,x='LON',y='LAT',title='Crime Occurrences (Spatial)')
# Show the graph
fig.show()

PAGE 5

#Visualize crime hotspot
#import python folium library for creating interactive maps

#Creating a folium map centered around the average latitude and longitude of crime data
crime_map=folium.Map(location=[df['LAT'].mean(),df['LON'].mean()],zoom_start=10)
#Adding crime markers to the map 
for index, row in df.iterrows():
		popup=folium.Popup(f"Type: {row['Crm_Cd_Desc']}, Location: {row['Location']}, Date: {row['DATE_OCC']}, parse_html=True")
# ADD A marker for each crime with popup message 
folium.Marker(location=[ row['LAT'], row['LON'] ],popup=popup).add_to (crime_map)

display(crime_map)


PAGE 6

#Investigate the distribution of victim ages and genders.
#Plot distribution of victim ages
plt.figure(figsize=(10,6))
sns.histplot(df['Vict_Age'], color='#FF6000', edgecolor='black')
plt.title('Distribution of Victim Ages')
plt.xlabels("Age")
plt.ylabels("Frequency")
plt.grid(True)
plt.show()
#Plot distribution of victim genders
plt.figure(figsize=(6,6))
sns.countplot(x=df['Vict_Sex'],palette=['#5356FF','#201658','#0D9276'],edgecolor='black')
plt.title('Distribution of Victim Genders')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.grid(True)
plt.show()


PAGE 7


#Where do most crime occur based on location

premise=df['Premis_Desc']
count_of_premises=premise.value_counts()
print(count_of_premises)

#Examine the status of reported crimes.
crime=df['Status']
status_counts=crime.value_counts()
print(status_counts)

plt.figure(figsize=(6,6))
plt.pie(status_counts,labels=status_counts.index, autopct='%1.1f%',startangle=140)
plt.title('Status of Reported Crimes')
#Equal aspect ratio ensures that pie is drawn as a circle
plt.axis('equal')
plt.show()